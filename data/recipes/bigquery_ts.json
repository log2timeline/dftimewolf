{
    "name": "bigquery_ts",
    "short_description": "Collects results from BigQuery and uploads them to Timesketch.",
    "description": "Collects results from BigQuery in JSONL form, dumps them to the filesystem, and uploads them to Timesketch.",
    "preflights": [{
      "wants": [],
      "name": "GCPTokenCheck",
      "args": {
          "project_name": "@project_name"
      }
    }],
    "modules": [{
        "wants": [],
        "name": "BigQueryCollector",
        "args": {
            "project_name": "@project_name",
            "query": "@query",
            "description": "@description",
            "pandas_output": false
        }
        }, {

            "wants": ["BigQueryCollector"],
            "name": "TimesketchExporter",
            "args": {
                "incident_id": "@incident_id",
                "token_password": "@token_password",
                "sketch_id": "@sketch_id",
                "analyzers": null,
                "wait_for_timelines": "@wait_for_timelines"
            }
        }],
        "args": [
            ["project_name", "Name of GCP project to collect logs from.", null, {"format": "regex", "comma_separated": false, "regex": "^[a-z][-\\.:a-z0-9]{4,28}[a-z0-9]$"}],
            ["query", "Query to execute.", null],
            ["description", "Human-readable description of the query.", null],
            ["--incident_id", "Incident ID (used for Timesketch description).", null],
            ["--sketch_id", "Timesketch sketch to which the timeline should be added.", null, {"format": "regex", "regex": "^\\d+$"}],
            ["--token_password", "Optional custom password to decrypt Timesketch credential file with.", ""],
            ["--wait_for_timelines", "Whether to wait for Timesketch to finish processing all timelines.", true]
        ]
}
