{
    "name": "gcp_turbinia_disk_copy_ts",
    "short_description": "Imports a remote GCP persistent disk, processes it with Turbinia and sends results to Timesketch.",
    "description": "Imports a remote GCP persistent disk into an analysis GCP project and sends the result of Turbinia processing to Timesketch.\n\n- Copies a disk from a remote GCP project into an analysis project\n- Creates Turbinia processing request to process the imported disk\n- Downloads and sends results of the Turbinia processing to Timesketch.\n\nThis recipe will also start an analysis VM in the destination project with the attached disk (the same one that Turbinia will have processed). If the target disk is already in the same project as Turbinia, you can use the `gcp_turbinia_ts` recipe.",
    "preflights": [{
      "wants": [],
      "name": "GCPTokenCheck",
      "runtime_name": "GCPTokenCheck-analysis",
      "args": {
          "project_name": "@analysis_project_name"
      }
    },
    {
      "wants": [],
      "name": "GCPTokenCheck",
      "runtime_name": "GCPTokenCheck-source",
      "args": {
          "project_name": "@source_project_name"
      }
    }],
    "modules": [{
        "wants": [],
        "name": "LocalYaraCollector",
        "args": {
          "rules_path": "@yara_rules_path"
        }
      }, {
        "wants": [],
        "name": "GCEDiskCopy",
        "args": {
          "destination_project_name": "@analysis_project_name",
          "source_project_name": "@source_project_name",
          "destination_zone": "@turbinia_zone",
          "remote_instance_names": "@instances",
          "disk_names": "@disks",
          "all_disks": "@all_disks",
          "stop_instances": "@stop_instances"
        }
      }, {
        "wants": ["GCEDiskCopy"],
        "name": "GCEForensicsVM",
        "args": {
          "project_name": "@analysis_project_name",
          "incident_id": "@incident_id",
          "zone": "@turbinia_zone",
          "boot_disk_size": "@boot_disk_size",
          "boot_disk_type": "@boot_disk_type",
          "cpu_cores": "@cpu_cores",
          "image_project": "ubuntu-os-cloud",
          "image_family": "ubuntu-2204-lts",
          "create_analysis_vm": "@create_analysis_vm"
        }
      }, {
        "wants": ["GCEDiskCopy", "LocalYaraCollector"],
        "name": "TurbiniaGCPProcessor",
        "args": {
            "disk_names": null,
            "request_ids": "@request_ids",
            "project": "@analysis_project_name",
            "turbinia_auth": "@turbinia_auth",
            "turbinia_recipe": "@turbinia_recipe",
            "turbinia_zone": "@turbinia_zone",
            "turbinia_api": "@turbinia_api",
            "incident_id": "@incident_id",
            "sketch_id": "@sketch_id"
        }
    }, {
        "wants": ["TurbiniaGCPProcessor"],
        "name": "TimesketchExporter",
        "args": {
            "incident_id": "@incident_id",
            "token_password": "@token_password",
            "endpoint": "@timesketch_endpoint",
            "username": "@timesketch_username",
            "password": "@timesketch_password",
            "sketch_id": "@sketch_id",
            "analyzers": null,
            "wait_for_timelines": "@wait_for_timelines"
        }
    }],
    "args": [
        ["source_project_name", "Name of the project containing the instance / disks to copy.", null, {"format": "regex", "comma_separated": false, "regex": "^[a-z][-a-z0-9]{4,28}[a-z0-9]$"}],
        ["analysis_project_name", "Name of the project containing the Turbinia instance.", null, {"format": "regex", "comma_separated": false, "regex": "^[a-z][-a-z0-9]{4,28}[a-z0-9]$"}],
        ["--request_ids", "Comma separated Turbinia request identifiers to process.", null, {"format": "regex", "comma_separated": true, "regex": "^[a-f0-9]{32}$"}],
        ["--yara_rules_path", "Paths to Yara rules sent to Turbinia for processing.", null],
        ["--turbinia_recipe", "The Turbinia recipe name to use for evidence processing.", null],
        ["--turbinia_zone", "The GCP zone the disk to process and Turbinia workers are in.", "us-central1-f", {"format": "gcp_zone"}],
        ["--turbinia_auth", "Flag to indicate whether Turbinia API server requires authentication.", false],
        ["--turbinia_api", "Turbinia API server endpoint.", "http://127.0.0.1:8000"],
        ["--incident_id", "Incident ID (used for Timesketch description and to label the VM with).", null],
        ["--sketch_id", "Timesketch sketch to which the timeline should be added.", null, {"format": "regex", "regex": "^\\d+$"}],
        ["--timesketch_endpoint", "Timesketch endpoint", "http://localhost:5000/"],
        ["--timesketch_username", "Username for Timesketch server.", null],
        ["--timesketch_password", "Password for Timesketch server.", null],
        ["--token_password", "Optional custom password to decrypt Timesketch credential file with.", ""],
        ["--create_analysis_vm", "Create an analysis VM in the destination project.", true],
        ["--wait_for_timelines", "Whether to wait for Timesketch to finish processing all timelines.", true],
        ["--instances", "Name of the instances to analyze.", null],
        ["--disks", "Comma-separated list of disks to copy from the source GCP project (if `instance` not provided).", null],
        ["--all_disks", "Copy all disks in the designated instance. Overrides disk_names if specified.", false],
        ["--stop_instances", "Stop the designated instances after copying disks.", false],
        ["--cpu_cores", "Number of CPU cores of the analysis VM.", 4, {"format": "regex", "regex": "^\\d+$"}],
        ["--boot_disk_size", "The size of the analysis VM boot disk (in GB).", 50, {"format": "regex", "regex": "^\\d+$"}],
        ["--boot_disk_type", "Disk type to use [pd-standard, pd-ssd]", "pd-standard", {"format": "regex", "regex": "^pd-((ssd)|(standard))$"}],
        ["--image_project", "Name of the project where the analysis VM image is hosted.", "ubuntu-os-cloud"],
        ["--image_family", "Name of the image to use to create the analysis VM.", "ubuntu-2204-lts"]
    ]
}
